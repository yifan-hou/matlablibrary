% given exponential coordinate w, compute the linear mapping M such that
%   v = M*wd
% where v is the body angular velocity, wd is the time derivative of w.

function M = e2w_m(w)
    R = exp2m(w);
    dR_dw = R_w(w);

    % V_hat = R'*dR_dw;
    V_hat = mat_ten(R', dR_dw);

    v1 = V_hat(3, 2, :);
    v2 = V_hat(1, 3, :);
    v3 = V_hat(2, 1, :);

    v1 = v1(:);
    v2 = v2(:);
    v3 = v3(:);

    M = [v1 v2 v3]';

function R_w = R_w(w)
%R_W
%    R_W = R_W(w)

%    This function was generated by the Symbolic Math Toolbox version 7.2.
%    manualy modified by Yifan
%    29-Nov-2018 20:28:38
if norm(w) < 1e-10
    R_w = zeros(3,3,3);
    R_w(:,:,1) = [0 0 0; 0 0 -1; 0 1 0];
    R_w(:,:,2) = [0 0 1; 0 0 0; -1 0 0];
    R_w(:,:,3) = [0 -1 0; 1 0 0; 0 0 0];
else
    w1 = w(1,:);
    w2 = w(2,:);
    w3 = w(3,:);
    t2 = w2.^2;
    t3 = w3.^2;
    t4 = w1.^2;
    t5 = t2+t3+t4;
    t6 = sqrt(t5);
    t7 = t2+t3;
    t8 = cos(t6);
    t9 = t8-1.0;
    t10 = 1.0./t5;
    t11 = sin(t6);
    t12 = 1.0./t5.^(3.0./2.0);
    t13 = 1.0./t5.^2;
    t14 = t11.*t12.*w2.*w3;
    t15 = t11.*t12.*w1.*w3;
    t16 = t4.*t11.*t12.*w2;
    t17 = t4.*t9.*t13.*w2.*2.0;
    t18 = t8.*t10.*w2.*w3;
    t19 = t2.*t11.*t12.*w1;
    t20 = t2.*t9.*t13.*w1.*2.0;
    t21 = t5.^(3.0./2.0);
    t22 = t11.*t21;
    t23 = t8.*w1.*w2.*w3.*2.0;
    t24 = t6.*t11.*w1.*w2.*w3;
    t25 = t3+t4;
    t26 = 1.0./sqrt(t5);
    t27 = t9.*t13.*w1.*w2.*w3.*2.0;
    t28 = t11.*t12.*w1.*w2.*w3;
    t29 = t8.*t10.*w1.*w2;
    t30 = t8.*t10.*w1.*w3;
    t31 = t11.*t12.*w1.*w2;
    t32 = t4.*t11.*t12.*w3;
    t33 = t4.*t9.*t13.*w3.*2.0;
    t34 = t3.*t11.*t12.*w1;
    t35 = t3.*t9.*t13.*w1.*2.0;
    t36 = t2.*t11.*t12.*w3;
    t37 = t2.*t9.*t13.*w3.*2.0;
    t38 = t3.*t11.*t12.*w2;
    t39 = t3.*t9.*t13.*w2.*2.0;
    t40 = t2+t4;
    t0 = -w1.*1.0./(w1.^2+w2.^2+w3.^2).^2.*(w2.^2.*2.0-w2.^2.*cos(sqrt(w1.^2+w2.^2+w3.^2)).*2.0+w1.^2.*sin(sqrt(w1.^2+w2.^2+w3.^2)).*sqrt(w1.^2+w2.^2+w3.^2)+w3.^2.*sin(sqrt(w1.^2+w2.^2+w3.^2)).*sqrt(w1.^2+w2.^2+w3.^2));
    t1 = -w1.*1.0./(w1.^2+w2.^2+w3.^2).^2.*(w3.^2.*2.0-w3.^2.*cos(sqrt(w1.^2+w2.^2+w3.^2)).*2.0+w1.^2.*sin(sqrt(w1.^2+w2.^2+w3.^2)).*sqrt(w1.^2+w2.^2+w3.^2)+w2.^2.*sin(sqrt(w1.^2+w2.^2+w3.^2)).*sqrt(w1.^2+w2.^2+w3.^2));
    t21 = -w2.*1.0./(w1.^2+w2.^2+w3.^2).^2.*(w1.^2.*2.0-w1.^2.*cos(sqrt(w1.^2+w2.^2+w3.^2)).*2.0+w2.^2.*sin(sqrt(w1.^2+w2.^2+w3.^2)).*sqrt(w1.^2+w2.^2+w3.^2)+w3.^2.*sin(sqrt(w1.^2+w2.^2+w3.^2)).*sqrt(w1.^2+w2.^2+w3.^2));
    t41 = -w2.*1.0./(w1.^2+w2.^2+w3.^2).^2.*(w3.^2.*2.0-w3.^2.*cos(sqrt(w1.^2+w2.^2+w3.^2)).*2.0+w1.^2.*sin(sqrt(w1.^2+w2.^2+w3.^2)).*sqrt(w1.^2+w2.^2+w3.^2)+w2.^2.*sin(sqrt(w1.^2+w2.^2+w3.^2)).*sqrt(w1.^2+w2.^2+w3.^2));
    t42 = -w3.*1.0./(w1.^2+w2.^2+w3.^2).^2.*(w1.^2.*2.0-w1.^2.*cos(sqrt(w1.^2+w2.^2+w3.^2)).*2.0+w2.^2.*sin(sqrt(w1.^2+w2.^2+w3.^2)).*sqrt(w1.^2+w2.^2+w3.^2)+w3.^2.*sin(sqrt(w1.^2+w2.^2+w3.^2)).*sqrt(w1.^2+w2.^2+w3.^2));
    t43 = -w3.*1.0./(w1.^2+w2.^2+w3.^2).^2.*(w2.^2.*2.0-w2.^2.*cos(sqrt(w1.^2+w2.^2+w3.^2)).*2.0+w1.^2.*sin(sqrt(w1.^2+w2.^2+w3.^2)).*sqrt(w1.^2+w2.^2+w3.^2)+w3.^2.*sin(sqrt(w1.^2+w2.^2+w3.^2)).*sqrt(w1.^2+w2.^2+w3.^2));

    R_w = reshape([t7.*t9.*t13.*w1.*-2.0-t7.*t11.*t12.*w1,-t15+t16+t17+t30-t9.*t10.*w2,-t29+t31+t32+t33-t9.*t10.*w3,t15+t16+t17-t9.*t10.*w2-t8.*t10.*w1.*w3,t0,t13.*(t22+t23+t24+t4.*t5.*t8-t4.*t6.*t11-w1.*w2.*w3.*2.0),t29+t32+t33-t9.*t10.*w3-t11.*t12.*w1.*w2,t27+t28-t11.*t26-t4.*t8.*t10+t4.*t11.*t12,t1,t21,-t14+t18+t19+t20-t9.*t10.*w1,t27+t28-t11.*t26-t2.*t8.*t10+t2.*t11.*t12,t14+t19+t20-t9.*t10.*w1-t8.*t10.*w2.*w3,t9.*t13.*t25.*w2.*-2.0-t11.*t12.*t25.*w2,t29-t31+t36+t37-t9.*t10.*w3,t13.*(t22+t23+t24+t2.*t5.*t8-t2.*t6.*t11-w1.*w2.*w3.*2.0),-t29+t31+t36+t37-t9.*t10.*w3,t41,t42,t13.*(t22+t23+t24+t3.*t5.*t8-t3.*t6.*t11-w1.*w2.*w3.*2.0),t14-t18+t34+t35-t9.*t10.*w1,t27+t28-t11.*t26-t3.*t8.*t10+t3.*t11.*t12,t43,-t15+t30+t38+t39-t9.*t10.*w2,-t14+t18+t34+t35-t9.*t10.*w1,t15-t30+t38+t39-t9.*t10.*w2,t9.*t13.*t40.*w3.*-2.0-t11.*t12.*t40.*w3],[3,3,3]);
end